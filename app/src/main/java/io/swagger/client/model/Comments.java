/*
 * API V1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.io.Serializable;
import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Comment;
import io.swagger.client.model.Pagination;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Comments
 */


public class Comments implements Serializable {
  @SerializedName("comments")
  private List<Comment> comments = null;

  @SerializedName("comments_pagination")
  private Pagination commentsPagination = null;

  public Comments comments(List<Comment> comments) {
    this.comments = comments;
    return this;
  }

  public Comments addCommentsItem(Comment commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<Comment>();
    }
    this.comments.add(commentsItem);
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @Schema(description = "")
  public List<Comment> getComments() {
    return comments;
  }

  public void setComments(List<Comment> comments) {
    this.comments = comments;
  }

  public Comments commentsPagination(Pagination commentsPagination) {
    this.commentsPagination = commentsPagination;
    return this;
  }

   /**
   * Get commentsPagination
   * @return commentsPagination
  **/
  @Schema(description = "")
  public Pagination getCommentsPagination() {
    return commentsPagination;
  }

  public void setCommentsPagination(Pagination commentsPagination) {
    this.commentsPagination = commentsPagination;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Comments comments = (Comments) o;
    return Objects.equals(this.comments, comments.comments) &&
        Objects.equals(this.commentsPagination, comments.commentsPagination);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comments, commentsPagination);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Comments {\n");
    
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    commentsPagination: ").append(toIndentedString(commentsPagination)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
